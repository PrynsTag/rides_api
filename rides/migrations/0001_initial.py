# Generated by Django 5.2.1 on 2025-07-28 14:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_user', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(default='user', max_length=50)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id_ride', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('en-route', 'En Route'), ('pickup', 'Pickup'), ('dropoff', 'Dropoff'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=20)),
                ('pickup_latitude', models.FloatField()),
                ('pickup_longitude', models.FloatField()),
                ('dropoff_latitude', models.FloatField()),
                ('dropoff_longitude', models.FloatField()),
                ('pickup_time', models.DateTimeField()),
                ('id_driver', models.ForeignKey(db_column='id_driver', on_delete=django.db.models.deletion.CASCADE, related_name='rides_as_driver', to=settings.AUTH_USER_MODEL)),
                ('id_rider', models.ForeignKey(db_column='id_rider', on_delete=django.db.models.deletion.CASCADE, related_name='rides_as_rider', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ride',
            },
        ),
        migrations.CreateModel(
            name='RideEvent',
            fields=[
                ('id_ride_event', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('id_ride', models.ForeignKey(db_column='id_ride', on_delete=django.db.models.deletion.CASCADE, related_name='ride_events', to='rides.ride')),
            ],
            options={
                'db_table': 'ride_event',
            },
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['pickup_time'], name='ride_pickup__112ef2_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['status'], name='ride_status_4ce3bb_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['id_rider'], name='ride_id_ride_8b38cd_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['id_driver'], name='ride_id_driv_d151ab_idx'),
        ),
        migrations.AddIndex(
            model_name='rideevent',
            index=models.Index(fields=['created_at'], name='ride_event_created_fda889_idx'),
        ),
        migrations.AddIndex(
            model_name='rideevent',
            index=models.Index(fields=['id_ride', 'created_at'], name='ride_event_id_ride_ca7133_idx'),
        ),
    ]

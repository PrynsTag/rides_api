{
    "Django Model": {
        "prefix": "djmodel",
        "body": [
            "class ${1:ModelName}(models.Model):",
            "    ${2:field_name} = models.${3:CharField}(${4:max_length=100})",
            "    created_at = models.DateTimeField(auto_now_add=True)",
            "    updated_at = models.DateTimeField(auto_now=True)",
            "",
            "    class Meta:",
            "        db_table = '${5:table_name}'",
            "        ordering = ['-created_at']",
            "",
            "    def __str__(self):",
            "        return self.${6:field_name}"
        ],
        "description": "Django Model Template"
    },
    "Django Serializer": {
        "prefix": "djserializer",
        "body": [
            "class ${1:ModelName}Serializer(serializers.ModelSerializer):",
            "    class Meta:",
            "        model = ${1:ModelName}",
            "        fields = ['${2:field1}', '${3:field2}']"
        ],
        "description": "Django REST Framework Serializer"
    },
    "Django ViewSet": {
        "prefix": "djviewset",
        "body": [
            "class ${1:ModelName}ViewSet(viewsets.ModelViewSet):",
            "    queryset = ${1:ModelName}.objects.all()",
            "    serializer_class = ${1:ModelName}Serializer",
            "    permission_classes = [${2:IsAuthenticated}]",
            "    filter_backends = [DjangoFilterBackend, SearchFilter, OrderingFilter]",
            "    filterset_fields = ['${3:field}']",
            "    search_fields = ['${4:field}']",
            "    ordering_fields = ['${5:field}']"
        ],
        "description": "Django REST Framework ViewSet"
    },
    "Django Management Command": {
        "prefix": "djcommand",
        "body": [
            "from django.core.management.base import BaseCommand",
            "",
            "class Command(BaseCommand):",
            "    help = '${1:Command description}'",
            "",
            "    def add_arguments(self, parser):",
            "        parser.add_argument('${2:argument}', type=${3:str}, help='${4:Argument description}')",
            "",
            "    def handle(self, *args, **options):",
            "        ${5:# Command logic here}",
            "        self.stdout.write(",
            "            self.style.SUCCESS('${6:Success message}')",
            "        )"
        ],
        "description": "Django Management Command"
    }
}